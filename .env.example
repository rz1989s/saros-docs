# =============================================================================
# Saros SDK Documentation Environment Variables
# =============================================================================
# Copy this file to .env.local and configure your environment

# -----------------------------------------------------------------------------
# Solana Network Configuration
# -----------------------------------------------------------------------------

# Primary RPC endpoint (use your own for better performance)
SOLANA_RPC_URL=https://api.devnet.solana.com

# WebSocket endpoint for real-time updates  
SOLANA_WS_URL=wss://api.devnet.solana.com

# Network environment (devnet, testnet, mainnet-beta)
SOLANA_NETWORK=devnet

# Alternative RPC endpoints for failover
BACKUP_RPC_URL_1=https://rpc.ankr.com/solana_devnet
BACKUP_RPC_URL_2=https://devnet.helius-rpc.com

# -----------------------------------------------------------------------------
# SDK Configuration
# -----------------------------------------------------------------------------

# Enable SDK debug logging (true/false)
SAROS_DEBUG=false

# SDK operation timeout in milliseconds
SAROS_TIMEOUT=30000

# Maximum retry attempts for failed transactions
SAROS_MAX_RETRIES=3

# Default slippage tolerance (basis points, 100 = 1%)
DEFAULT_SLIPPAGE_BPS=50

# -----------------------------------------------------------------------------
# Testing & Development
# -----------------------------------------------------------------------------

# Test environment (development, testing, production)
NODE_ENV=development

# Enable test mode (uses mock data when true)
TEST_MODE=false

# Test wallet private key (DEVNET ONLY - never use on mainnet)
TEST_WALLET_PRIVATE_KEY=your_test_wallet_private_key_here

# Performance monitoring (true/false)
ENABLE_PERFORMANCE_MONITORING=true

# Debug API calls (true/false)
DEBUG_API_CALLS=false

# -----------------------------------------------------------------------------
# Documentation Site Configuration
# -----------------------------------------------------------------------------

# Site URL for production builds
SITE_URL=https://saros-docs.rectorspace.com

# Base URL path (useful for subdirectory deployments)
BASE_URL=/

# -----------------------------------------------------------------------------
# Algolia Search Configuration
# -----------------------------------------------------------------------------

# Algolia application ID
ALGOLIA_APP_ID=your_algolia_app_id

# Algolia search-only API key (safe for client-side)
ALGOLIA_SEARCH_API_KEY=your_algolia_search_api_key

# Algolia index name
ALGOLIA_INDEX_NAME=saros-docs

# Enable search analytics
ALGOLIA_ANALYTICS=true

# -----------------------------------------------------------------------------
# Third-Party Integrations
# -----------------------------------------------------------------------------

# Vercel Analytics (optional)
VERCEL_ANALYTICS=true

# Google Analytics tracking ID (optional)
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# Sentry DSN for error tracking (optional)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# -----------------------------------------------------------------------------
# Interactive Examples Configuration
# -----------------------------------------------------------------------------

# CodeSandbox organization ID (for embedded examples)
CODESANDBOX_ORG_ID=saros-finance

# StackBlitz organization ID
STACKBLITZ_ORG_ID=saros-finance

# Enable live code execution in browser
ENABLE_LIVE_CODE=true

# WebSocket connection for live updates
WEBSOCKET_ENDPOINT=wss://api.devnet.solana.com

# -----------------------------------------------------------------------------
# Security Settings
# -----------------------------------------------------------------------------

# Enable CORS for API requests
ENABLE_CORS=true

# Allowed origins for API requests (comma-separated)
ALLOWED_ORIGINS=http://localhost:3000,https://saros-docs.rectorspace.com

# Rate limiting (requests per minute)
RATE_LIMIT_RPM=100

# API key for protected endpoints (if any)
API_KEY=your_optional_api_key

# -----------------------------------------------------------------------------
# Deployment Configuration
# -----------------------------------------------------------------------------

# Deployment target (vercel, netlify, github-pages, docker)
DEPLOYMENT_TARGET=vercel

# Enable build optimization
OPTIMIZE_BUILD=true

# Enable bundle analyzer
ANALYZE_BUNDLE=false

# CDN configuration for static assets
CDN_URL=https://cdn.saros-docs.com

# -----------------------------------------------------------------------------
# Development Tools
# -----------------------------------------------------------------------------

# Enable TypeScript strict mode
TS_STRICT=true

# Enable ESLint auto-fix on save
ESLINT_AUTOFIX=true

# Prettier configuration
PRETTIER_ENABLED=true

# Hot reload for markdown files
HOT_RELOAD_DOCS=true

# -----------------------------------------------------------------------------
# Performance & Monitoring
# -----------------------------------------------------------------------------

# Enable performance profiling
ENABLE_PROFILING=false

# Lighthouse CI token (for automated performance testing)
LIGHTHOUSE_CI_TOKEN=your_lighthouse_token

# Performance budget thresholds
PERFORMANCE_BUDGET_JS=250000
PERFORMANCE_BUDGET_CSS=50000
PERFORMANCE_BUDGET_IMAGES=500000

# -----------------------------------------------------------------------------
# Example Values for Quick Setup
# -----------------------------------------------------------------------------

# For quick development setup, uncomment these:
# SOLANA_RPC_URL=https://api.devnet.solana.com
# SOLANA_NETWORK=devnet
# NODE_ENV=development
# SAROS_DEBUG=true
# TEST_MODE=true
# ALGOLIA_APP_ID=SAROS_DOCS_APP_ID
# ALGOLIA_SEARCH_API_KEY=1234567890abcdef1234567890abcdef
# ALGOLIA_INDEX_NAME=saros-docs

# -----------------------------------------------------------------------------
# Security Notes
# -----------------------------------------------------------------------------
# 
# ⚠️  IMPORTANT SECURITY REMINDERS:
#
# 1. Never commit this file with real values to version control
# 2. Use .env.local for local development (automatically git-ignored)  
# 3. For production, set environment variables in your deployment platform
# 4. Test wallet keys should only be used on devnet/testnet
# 5. Keep API keys and sensitive data in secure environment variable stores
# 6. Regularly rotate API keys and monitor their usage
# 7. Use the principle of least privilege for all API access
#
# -----------------------------------------------------------------------------